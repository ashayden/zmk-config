/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
 behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 1>, <&tog 1>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | TAB  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP  |
// | CAP  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  '  | ENT   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHIFT |
//                    | DEL | LWR | GUI |   | SPC | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp CAPS  &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SQT  &kp RET
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                  &kp DEL &td0 &kp LGUI    &kp SPACE &lt 2 LG(C) &kp LG(V)
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | MCOM |  !  |  @  |  #  | V+  | GST |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 |MUTE | BT5 |   |     |     |     |     | UP  |   ;  |
// | SHFT |     |     |     | V-  |     |   |  _  |HOME | END | LFT | DWN |  RGT |
//                    |CTRL |     | GUI |   | SPC |     | ALT |
                        bindings = <
   &kp F3     &kp EXCL     &kp AT       &kp HASH     K_VOL_UP  &kp LG(LS(T))  &kp CARET  &kp AMPS           &kp KP_MULTIPLY    &kp LPAR &kp RPAR    &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 K_MUTE    &trans         &trans     &trans             &trans             &trans    &kp UP     &kp SEMI
   &kp LSHFT  &trans       &trans       &trans       K_VOL_DN  &trans         &kp UNDER  &kp LG(LS(LEFT))   &kp LG(LS(RIGHT))  &kp LEFT  &kp DOWN   &kp RIGHT
                          	        &kp LCTRL    &trans       &kp LGUI   	 &kp SPACE  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | SCSH |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | TAB  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | ENT  |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    |CTRL |     | GUI |   | SPC |     | ALT |
                        bindings = <
   &kp LG(LS(N4)) &kp EXCL &kp AT &kp HASH   &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp TAB        &kp N1   &kp N2 &kp N3     &kp N4   &kp N5      &kp N6    &kp N7    &kp N8          &kp N9   &kp N0   &kp RET
   &kp LSHFT      &trans   &trans &trans     &trans   &trans      &kp MINUS &kp PLUS  &kp LBKT        &kp RBKT &kp PIPE &kp TILDE
                    	     &kp LCTRL 	&trans   &kp LGUI    &kp SPACE   &trans  &kp RALT
                        >;
                };
        };
};


